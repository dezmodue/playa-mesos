# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
   - "alert.rules"
  # - "second.rules"


# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  - job_name:       'mesos-cluster'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['localhost:9110']
        labels:
          group: 'mesos-master'

      - targets: ['localhost:9111']
        labels:
          group: 'mesos-slave'

    metric_relabel_configs:
      - source_labels: ['id']
        regex: '(.+)\.{1}.+'
        target_label: 'app_id'
      - source_labels: ['id']
        regex: '.+\.{1}(.+)'
        target_label: 'task_id'
      # support 3 levels of nesting, should be enough for everyone.
      # TODO: make this less shit if possible, I cant to regexp anymore
      - source_labels: ['app_id']
        regex: '([[:alnum:]-]*)_([[:alnum:]-]*)_([[:alnum:]-]*)_([[:alnum:]-]*)'
        target_label: 'app_id'
        replacement: '/${1}/${2}/${3}/${4}'
      - source_labels: ['app_id']
        regex: '([[:alnum:]-]*)_([[:alnum:]-]*)_([[:alnum:]-]*)'
        target_label: 'app_id'
        replacement: '/${1}/${2}/${3}'
      - source_labels: ['app_id']
        regex: '([[:alnum:]-]*)_([[:alnum:]-]*)'
        target_label: 'app_id'
        replacement: '/${1}/${2}'

  - job_name:       'node'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['localhost:9100']
        labels:
          group: 'node'

  - job_name:       'cadvisor'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['localhost:8081']
        labels:
          group: 'cadvisor'

  - job_name:       'container-metrics'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:

       - targets: ['localhost:9104']
         labels:
           group: 'container-exporter'

  - job_name:       'autoscaling_queue'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 10s

    static_configs:
      - targets: ['localhost:4567']
        labels:
          group: 'autoscaling_queue'



  - job_name:       'autoscaling_webhook'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 10s

    static_configs:
      - targets: ['localhost:4568']
        labels:
          group: 'autoscaling_queue'

